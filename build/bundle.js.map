{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../src/backend/justwatchapi.ts","../../src/Loading.svelte","../../src/Search.svelte","../../src/Header.svelte","../../src/backend/search.ts","../../src/SearchResults.svelte","../../src/Selection.svelte","../../src/App.svelte","../../src/Index.svelte","../../src/main.ts"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentElement !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration();\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    select.selectedIndex = -1; // no option should be selected\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, bubbles = false) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor() {\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes) {\n        super();\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = append_empty_stylesheet(node).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction escape_attribute_value(value) {\n    return typeof value === 'string' ? escape(value) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(context || (parent_component ? parent_component.$$.context : [])),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = on_mount.map(run).filter(is_function);\n            if (on_destroy) {\n                on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.44.1' }, detail), true));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, src_url_equal, start_hydrating, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","// Search for an Item (either a show or movie title) in a locale/country (ex. \"en_US\" for USA)\nfunction proxy() {\n    let proxies = [\n        \"https://warm-coast-72718.herokuapp.com/\",\n        \"https://afternoon-falls-07756.herokuapp.com/\",\n        \"https://boiling-oasis-44034.herokuapp.com/\",\n        \"https://ancient-lowlands-02291.herokuapp.com/\",\n        \"https://agile-forest-65193.herokuapp.com/\"\n    ];\n    let randomIndex = Math.floor(Math.random() * proxies.length);\n    return proxies[randomIndex];\n}\nexport async function search_for_item(query, country) {\n    console.log(proxy());\n    const url = `${proxy()}https://apis.justwatch.com/content/titles/${country}/popular`;\n    const body = {\n        \"query\": query,\n    };\n    const response = await fetch(url, {\n        method: \"POST\",\n        body: JSON.stringify(body),\n        headers: {\n            'Content-Type': 'application/json',\n            \"X-Requested-With\": \"fetch\"\n        }\n    });\n    if (response.ok == false)\n        throw new Error(\"Http Error: \" + response.status);\n    return await response.json();\n}\n// Returns raw JSON information on every locale supported by JustWatch\nasync function get_locales() {\n    return [{ \"exposed_url_part\": \"us\", \"is_standard_locale\": true, \"full_locale\": \"en_US\", \"i18n_state\": \"active\", \"iso_3166_2\": \"US\", \"country\": \"United States\", \"currency\": \"USD\", \"currency_name\": \"US Dollar\", \"country_names\": { \"de\": \"Vereinigte Staaten von Amerika\", \"es\": \"Estados Unidos\", \"fr\": \"États-Unis\", \"hr\": \"Sjedinjene Američke Države\", \"it\": \"Stati Uniti D'America\", \"ja\": \"アメリカ合衆国\", \"nl\": \"Verenigde Staten\", \"ru\": \"Соединённые Штаты Америки\" } }, { \"exposed_url_part\": \"de\", \"is_standard_locale\": true, \"full_locale\": \"de_DE\", \"i18n_state\": \"active\", \"iso_3166_2\": \"DE\", \"country\": \"Germany\", \"currency\": \"EUR\", \"currency_name\": \"Euro\", \"country_names\": { \"de\": \"Deutschland\", \"es\": \"Alemania\", \"fr\": \"Allemagne\", \"hr\": \"Njemačka\", \"it\": \"Germania\", \"ja\": \"ドイツ\", \"nl\": \"Duitsland\", \"ru\": \"Германия\" } }, { \"exposed_url_part\": \"br\", \"is_standard_locale\": true, \"full_locale\": \"pt_BR\", \"i18n_state\": \"active\", \"iso_3166_2\": \"BR\", \"country\": \"Brazil\", \"currency\": \"BRL\", \"currency_name\": \"Brazilian Real\", \"country_names\": { \"cy\": \"Brasil\", \"de\": \"Brasilien\", \"es\": \"Brasil\", \"fr\": \"Brésil\", \"hr\": \"Brazil\", \"it\": \"Brasile\", \"ja\": \"ブラジル\", \"nl\": \"Brazilië\", \"ru\": \"Бразилия\" } }, { \"exposed_url_part\": \"au\", \"is_standard_locale\": true, \"full_locale\": \"en_AU\", \"i18n_state\": \"active\", \"iso_3166_2\": \"AU\", \"country\": \"Australia\", \"currency\": \"AUD\", \"currency_name\": \"Australian Dollar\", \"country_names\": { \"cy\": \"Awstralia\", \"de\": \"Australien\", \"es\": \"Australia\", \"fr\": \"Australie\", \"hr\": \"Australija\", \"it\": \"Australia\", \"ja\": \"オーストラリア\", \"nl\": \"Australië\", \"ru\": \"Австралия\" } }, { \"exposed_url_part\": \"nz\", \"is_standard_locale\": true, \"full_locale\": \"en_NZ\", \"i18n_state\": \"active\", \"iso_3166_2\": \"NZ\", \"country\": \"New Zealand\", \"currency\": \"NZD\", \"currency_name\": \"New Zealand Dollar\", \"country_names\": { \"de\": \"Neuseeland\", \"es\": \"Nueva Zelanda\", \"fr\": \"Nouvelle-Zélande\", \"hr\": \"Novi Zeland\", \"it\": \"Nuova Zelanda\", \"ja\": \"ニュージーランド\", \"nl\": \"Nieuw-Zeeland\", \"ru\": \"Новая Зеландия\" } }, { \"exposed_url_part\": \"ca\", \"is_standard_locale\": true, \"full_locale\": \"en_CA\", \"i18n_state\": \"active\", \"iso_3166_2\": \"CA\", \"country\": \"Canada\", \"currency\": \"CAD\", \"currency_name\": \"Canadian Dollar\", \"country_names\": { \"cy\": \"Canada\", \"de\": \"Kanada\", \"es\": \"Canadá\", \"fr\": \"Canada\", \"hr\": \"Kanada\", \"it\": \"Canada\", \"ja\": \"カナダ\", \"nl\": \"Canada\", \"ru\": \"Канада\" } }, { \"exposed_url_part\": \"uk\", \"is_standard_locale\": true, \"full_locale\": \"en_GB\", \"i18n_state\": \"active\", \"iso_3166_2\": \"GB\", \"country\": \"United Kingdom\", \"currency\": \"GBP\", \"currency_name\": \"Pound Sterling\", \"country_names\": { \"de\": \"Vereinigtes Königreich\", \"es\": \"Reino Unido\", \"fr\": \"Royaume-Uni\", \"hr\": \"Ujedinjeno Kraljevstvo\", \"it\": \"Regno Unito\", \"ja\": \"イギリス\", \"nl\": \"Verenigd Koninkrijk\", \"ru\": \"Великобритания\" } }, { \"exposed_url_part\": \"za\", \"is_standard_locale\": true, \"full_locale\": \"en_ZA\", \"i18n_state\": \"active\", \"iso_3166_2\": \"ZA\", \"country\": \"South Africa\", \"currency\": \"ZAR\", \"currency_name\": \"Rand\", \"country_names\": { \"de\": \"Republik Südafrika\", \"es\": \"República de Sudáfrica\", \"fr\": \"Afrique du Sud\", \"hr\": \"Južnoafrička Republika\", \"it\": \"Sud Africa\", \"ja\": \"南アフリカ\", \"nl\": \"Zuid-Afrika\", \"ru\": \"Южно-Африканская Республика\" } }, { \"exposed_url_part\": \"ie\", \"is_standard_locale\": true, \"full_locale\": \"en_IE\", \"i18n_state\": \"active\", \"iso_3166_2\": \"IE\", \"country\": \"Ireland\", \"currency\": \"EUR\", \"currency_name\": \"Euro\", \"country_names\": { \"de\": \"Irland\", \"es\": \"Irlanda\", \"fr\": \"Irlande\", \"hr\": \"Irska\", \"it\": \"Irlanda\", \"ja\": \"アイルランド\", \"nl\": \"Ierland\", \"ru\": \"Ирландия\" } }, { \"exposed_url_part\": \"lt\", \"is_standard_locale\": true, \"full_locale\": \"lt_LT\", \"i18n_state\": \"active\", \"iso_3166_2\": \"LT\", \"country\": \"Lithuania\", \"currency\": \"LTL\", \"currency_name\": \"Lithuanian Litas\", \"country_names\": { \"de\": \"Litauen\", \"es\": \"Lituania\", \"fr\": \"Lituanie\", \"hr\": \"Litva\", \"it\": \"Lituania\", \"ja\": \"リトアニア\", \"nl\": \"Litouwen\", \"ru\": \"Литва\" } }, { \"exposed_url_part\": \"tw\", \"is_standard_locale\": true, \"full_locale\": \"zh_TW\", \"i18n_state\": \"active\", \"iso_3166_2\": \"TW\", \"country\": \"Taiwan\", \"currency\": \"TWD\", \"currency_name\": \"New Taiwan Dollar\", \"country_names\": { \"de\": \"Taiwan\", \"es\": \"Taiwán\", \"fr\": \"Taïwan\", \"hr\": \"Tajvan\", \"it\": \"Taiwan\", \"ja\": \"台湾（台湾省/中華民国）\", \"nl\": \"Taiwan\", \"ru\": \"Тайвань\" } }, { \"exposed_url_part\": \"eg\", \"is_standard_locale\": true, \"full_locale\": \"ar_EG\", \"i18n_state\": \"active\", \"iso_3166_2\": \"EG\", \"country\": \"Egypt\", \"currency\": \"EGP\", \"currency_name\": \"Egyptian Pound\", \"country_names\": { \"cy\": \"Yr Aifft\", \"de\": \"Ägypten\", \"es\": \"Egipto\", \"fr\": \"Égypte\", \"hr\": \"Egipat\", \"it\": \"Egitto\", \"ja\": \"エジプト\", \"nl\": \"Egypte\", \"ru\": \"Египет\" } }, { \"exposed_url_part\": \"fr\", \"is_standard_locale\": true, \"full_locale\": \"fr_FR\", \"i18n_state\": \"active\", \"iso_3166_2\": \"FR\", \"country\": \"France\", \"currency\": \"EUR\", \"currency_name\": \"Euro\", \"country_names\": { \"de\": \"Frankreich\", \"es\": \"Francia\", \"fr\": \"France\", \"hr\": \"Francuska\", \"it\": \"Francia\", \"ja\": \"フランス\", \"nl\": \"Frankrijk\", \"ru\": \"Франция\" } }, { \"exposed_url_part\": \"no-temp\", \"is_standard_locale\": true, \"full_locale\": \"nb_NO\", \"i18n_state\": \"staging\", \"iso_3166_2\": \"NO\", \"country\": \"Norway\", \"currency\": \"NOK\", \"currency_name\": \"Norwegian Krone\", \"country_names\": { \"de\": \"Norwegen\", \"es\": \"Noruega\", \"fr\": \"Norvège\", \"hr\": \"Norveška\", \"it\": \"Norvegia\", \"ja\": \"ノルウェー\", \"nl\": \"Noorwegen\", \"ru\": \"Норвегия\" } }, { \"exposed_url_part\": \"kr\", \"is_standard_locale\": true, \"full_locale\": \"ko_KR\", \"i18n_state\": \"active\", \"iso_3166_2\": \"KR\", \"country\": \"South Korea\", \"currency\": \"KRW\", \"currency_name\": \"Won\", \"country_names\": { \"de\": \"Südkorea\", \"es\": \"Corea del Sur\", \"fr\": \"Corée du Sud\", \"hr\": \"Južna Koreja\", \"it\": \"Corea del Sud\", \"ja\": \"大韓民国\", \"nl\": \"Zuid-Korea\", \"ru\": \"Южная Корея\" } }, { \"exposed_url_part\": \"it\", \"is_standard_locale\": true, \"full_locale\": \"it_IT\", \"i18n_state\": \"active\", \"iso_3166_2\": \"IT\", \"country\": \"Italy\", \"currency\": \"EUR\", \"currency_name\": \"Euro\", \"country_names\": { \"de\": \"Italien\", \"es\": \"Italia\", \"fr\": \"Italie\", \"hr\": \"Italija\", \"it\": \"Italia\", \"ja\": \"イタリア\", \"nl\": \"Italië\", \"ru\": \"Италия\" } }, { \"exposed_url_part\": \"mx\", \"is_standard_locale\": true, \"full_locale\": \"es_MX\", \"i18n_state\": \"active\", \"iso_3166_2\": \"MX\", \"country\": \"Mexico\", \"currency\": \"MXN\", \"currency_name\": \"Mexican Peso\", \"country_names\": { \"de\": \"Mexiko\", \"es\": \"México\", \"fr\": \"Mexique\", \"hr\": \"Meksiko\", \"it\": \"Messico\", \"ja\": \"メキシコ\", \"nl\": \"Mexico\", \"ru\": \"Мексика\" } }, { \"exposed_url_part\": \"jp\", \"is_standard_locale\": true, \"full_locale\": \"ja_JP\", \"i18n_state\": \"active\", \"iso_3166_2\": \"JP\", \"country\": \"Japan\", \"currency\": \"JPY\", \"currency_name\": \"Yen\", \"country_names\": { \"de\": \"Japan\", \"es\": \"Japón\", \"fr\": \"Japon\", \"hr\": \"Japan\", \"it\": \"Giappone\", \"ja\": \"日本\", \"nl\": \"Japan\", \"ru\": \"Япония\" } }, { \"exposed_url_part\": \"nl\", \"is_standard_locale\": true, \"full_locale\": \"en_NL\", \"i18n_state\": \"active\", \"iso_3166_2\": \"NL\", \"country\": \"Netherlands\", \"currency\": \"EUR\", \"currency_name\": \"Euro\", \"country_names\": { \"de\": \"Niederlande\", \"es\": \"Países Bajos\", \"fr\": \"Pays-Bas\", \"hr\": \"Nizozemska\", \"it\": \"Paesi Bassi\", \"ja\": \"オランダ\", \"nl\": \"Nederland\", \"ru\": \"Нидерланды\" } }, { \"exposed_url_part\": \"gt\", \"is_standard_locale\": true, \"full_locale\": \"es_GT\", \"i18n_state\": \"active\", \"iso_3166_2\": \"GT\", \"country\": \"Guatemala\", \"currency\": \"GTQ\", \"currency_name\": \"Quetzal\", \"country_names\": { \"de\": \"Guatemala\", \"es\": \"Guatemala\", \"fr\": \"Guatemala\", \"hr\": \"Gvatemala\", \"it\": \"Guatemala\", \"ja\": \"グアテマラ\", \"nl\": \"Guatemala\", \"ru\": \"Гватемала\" } }, { \"exposed_url_part\": \"be\", \"is_standard_locale\": true, \"full_locale\": \"fr_BE\", \"i18n_state\": \"active\", \"iso_3166_2\": \"BE\", \"country\": \"Belgium\", \"currency\": \"EUR\", \"currency_name\": \"Euro\", \"country_names\": { \"cy\": \"Gwlad Belg\", \"de\": \"Belgien\", \"es\": \"Bélgica\", \"fr\": \"Belgique\", \"hr\": \"Belgija\", \"it\": \"Belgio\", \"ja\": \"ベルギー\", \"nl\": \"België\", \"ru\": \"Бельгия\" } }, { \"exposed_url_part\": \"pe\", \"is_standard_locale\": true, \"full_locale\": \"es_PE\", \"i18n_state\": \"active\", \"iso_3166_2\": \"PE\", \"country\": \"Peru\", \"currency\": \"PEN\", \"currency_name\": \"Nuevo Sol\", \"country_names\": { \"de\": \"Peru\", \"es\": \"Perú\", \"fr\": \"Pérou\", \"hr\": \"Peru\", \"it\": \"Perù\", \"ja\": \"ペルー\", \"nl\": \"Peru\", \"ru\": \"Перу\" } }, { \"exposed_url_part\": \"sa\", \"is_standard_locale\": true, \"full_locale\": \"ar_SA\", \"i18n_state\": \"active\", \"iso_3166_2\": \"SA\", \"country\": \"Saudi Arabia\", \"currency\": \"SAR\", \"currency_name\": \"Saudi Riyal\", \"country_names\": { \"de\": \"Saudi-Arabien\", \"es\": \"Arabia Saudí\", \"fr\": \"Arabie Saoudite\", \"hr\": \"Saudijska Arabija\", \"it\": \"Arabia Saudita\", \"ja\": \"サウジアラビア\", \"nl\": \"Saoedi-Arabië\", \"ru\": \"Саудовская Аравия\" } }, { \"exposed_url_part\": \"th\", \"is_standard_locale\": true, \"full_locale\": \"en_TH\", \"i18n_state\": \"active\", \"iso_3166_2\": \"TH\", \"country\": \"Thailand\", \"currency\": \"THB\", \"currency_name\": \"Baht\", \"country_names\": { \"de\": \"Thailand\", \"es\": \"Tailandia\", \"fr\": \"Thaïlande\", \"hr\": \"Tajland\", \"it\": \"Tailandia\", \"ja\": \"タイ\", \"nl\": \"Thailand\", \"ru\": \"Таиланд\" } }, { \"exposed_url_part\": \"hk\", \"is_standard_locale\": true, \"full_locale\": \"zh_HK\", \"i18n_state\": \"active\", \"iso_3166_2\": \"HK\", \"country\": \"Hong Kong\", \"currency\": \"HKD\", \"currency_name\": \"Hong Kong Dollar\", \"country_names\": { \"de\": \"Hongkong\", \"es\": \"Hong Kong\", \"fr\": \"Hong Kong\", \"hr\": \"Hong Kong\", \"it\": \"Hong Kong\", \"ja\": \"香港\", \"nl\": \"Hongkong\", \"ru\": \"Гонконг\" } }, { \"exposed_url_part\": \"sk\", \"is_standard_locale\": true, \"full_locale\": \"sk_SK\", \"i18n_state\": \"active\", \"iso_3166_2\": \"SK\", \"country\": \"Slovakia\", \"currency\": \"EUR\", \"currency_name\": \"Euro\", \"country_names\": { \"de\": \"Slowakei\", \"es\": \"República Eslovaca\", \"fr\": \"Slovaquie\", \"hr\": \"Slovačka\", \"it\": \"Slovacchia\", \"ja\": \"スロバキア\", \"nl\": \"Slowakije\", \"ru\": \"Словакия\" } }, { \"exposed_url_part\": \"bg\", \"is_standard_locale\": true, \"full_locale\": \"bg_BG\", \"i18n_state\": \"active\", \"iso_3166_2\": \"BG\", \"country\": \"Bulgaria\", \"currency\": \"BGN\", \"currency_name\": \"Bulgarian Lev\", \"country_names\": { \"cy\": \"Bwlgaria\", \"de\": \"Bulgarien\", \"es\": \"Bulgaria\", \"fr\": \"Bulgarie\", \"hr\": \"Bugarska\", \"it\": \"Bulgaria\", \"ja\": \"ブルガリア\", \"nl\": \"Bulgarije\", \"ru\": \"Болгария\" } }, { \"exposed_url_part\": \"pt\", \"is_standard_locale\": true, \"full_locale\": \"pt_PT\", \"i18n_state\": \"active\", \"iso_3166_2\": \"PT\", \"country\": \"Portugal\", \"currency\": \"EUR\", \"currency_name\": \"Euro\", \"country_names\": { \"de\": \"Portugal\", \"es\": \"Portugal\", \"fr\": \"Portugal\", \"hr\": \"Portugal\", \"it\": \"Portogallo\", \"ja\": \"ポルトガル\", \"nl\": \"Portugal\", \"ru\": \"Португалия\" } }, { \"exposed_url_part\": \"cz\", \"is_standard_locale\": true, \"full_locale\": \"cs_CZ\", \"i18n_state\": \"active\", \"iso_3166_2\": \"CZ\", \"country\": \"Czech Republic\", \"currency\": \"CZK\", \"currency_name\": \"Czech Koruna\", \"country_names\": { \"cy\": \"Y Weriniaeth Tsiec\", \"de\": \"Tschechische Republik\", \"es\": \"República Checa\", \"fr\": \"République tchèque\", \"hr\": \"Češka\", \"it\": \"Repubblica Ceca\", \"ja\": \"チェコ\", \"nl\": \"Tsjechië\", \"ru\": \"Чехия\" } }, { \"exposed_url_part\": \"ru\", \"is_standard_locale\": true, \"full_locale\": \"ru_RU\", \"i18n_state\": \"active\", \"iso_3166_2\": \"RU\", \"country\": \"Russia\", \"currency\": \"RUB\", \"currency_name\": \"Russian Ruble\", \"country_names\": { \"de\": \"Russland\", \"es\": \"Rusia\", \"fr\": \"Russie\", \"hr\": \"Rusija\", \"it\": \"Russia\", \"ja\": \"ロシア連邦\", \"nl\": \"Rusland\", \"ru\": \"Россия\" } }, { \"exposed_url_part\": \"in\", \"is_standard_locale\": true, \"full_locale\": \"en_IN\", \"i18n_state\": \"active\", \"iso_3166_2\": \"IN\", \"country\": \"India\", \"currency\": \"INR\", \"currency_name\": \"Indian Rupee\", \"country_names\": { \"de\": \"Indien\", \"es\": \"India\", \"fr\": \"Inde\", \"hr\": \"Indija\", \"it\": \"India\", \"ja\": \"インド\", \"nl\": \"India\", \"ru\": \"Индия\" } }, { \"exposed_url_part\": \"ch\", \"is_standard_locale\": true, \"full_locale\": \"de_CH\", \"i18n_state\": \"active\", \"iso_3166_2\": \"CH\", \"country\": \"Switzerland\", \"currency\": \"CHE\", \"currency_name\": \"WIR Euro\", \"country_names\": { \"de\": \"Schweiz\", \"es\": \"Suiza\", \"fr\": \"Suisse\", \"hr\": \"Švicarska\", \"it\": \"Svizzera\", \"ja\": \"スイス\", \"nl\": \"Zwitserland\", \"ru\": \"Швейцария\" } }, { \"exposed_url_part\": \"at\", \"is_standard_locale\": true, \"full_locale\": \"de_AT\", \"i18n_state\": \"active\", \"iso_3166_2\": \"AT\", \"country\": \"Austria\", \"currency\": \"EUR\", \"currency_name\": \"Euro\", \"country_names\": { \"cy\": \"Awstria\", \"de\": \"Österreich\", \"es\": \"Austria\", \"fr\": \"Autriche\", \"hr\": \"Austrija\", \"it\": \"Austria\", \"ja\": \"オーストリア\", \"nl\": \"Oostenrijk\", \"ru\": \"Австрия\" } }, { \"exposed_url_part\": \"my\", \"is_standard_locale\": true, \"full_locale\": \"en_MY\", \"i18n_state\": \"active\", \"iso_3166_2\": \"MY\", \"country\": \"Malaysia\", \"currency\": \"MYR\", \"currency_name\": \"Malaysian Ringgit\", \"country_names\": { \"de\": \"Malaysia\", \"es\": \"Malasia\", \"fr\": \"Malaisie\", \"hr\": \"Malezija\", \"it\": \"Malesia\", \"ja\": \"マレーシア\", \"nl\": \"Maleisië\", \"ru\": \"Малайзия\" } }, { \"exposed_url_part\": \"id\", \"is_standard_locale\": true, \"full_locale\": \"en_ID\", \"i18n_state\": \"active\", \"iso_3166_2\": \"ID\", \"country\": \"Indonesia\", \"currency\": \"IDR\", \"currency_name\": \"Rupiah\", \"country_names\": { \"de\": \"Indonesien\", \"es\": \"Indonesia\", \"fr\": \"Indonésie\", \"hr\": \"Indonezija\", \"it\": \"Indonesia\", \"ja\": \"インドネシア\", \"nl\": \"Indonesië\", \"ru\": \"Индонезия\" } }, { \"exposed_url_part\": \"hn\", \"is_standard_locale\": true, \"full_locale\": \"es_HN\", \"i18n_state\": \"active\", \"iso_3166_2\": \"HN\", \"country\": \"Honduras\", \"currency\": \"HNL\", \"currency_name\": \"Lempira\", \"country_names\": { \"de\": \"Honduras\", \"es\": \"Honduras\", \"fr\": \"Honduras\", \"hr\": \"Honduras\", \"it\": \"Honduras\", \"ja\": \"ホンジュラス\", \"nl\": \"Honduras\", \"ru\": \"Гондурас\" } }, { \"exposed_url_part\": \"sg\", \"is_standard_locale\": true, \"full_locale\": \"en_SG\", \"i18n_state\": \"active\", \"iso_3166_2\": \"SG\", \"country\": \"Singapore\", \"currency\": \"SGD\", \"currency_name\": \"Singapore Dollar\", \"country_names\": { \"de\": \"Singapur\", \"es\": \"Singapur\", \"fr\": \"Singapour\", \"hr\": \"Singapur\", \"it\": \"Singapore\", \"ja\": \"シンガポール\", \"nl\": \"Singapore\", \"ru\": \"Сингапур\" } }, { \"exposed_url_part\": \"pl\", \"is_standard_locale\": true, \"full_locale\": \"pl_PL\", \"i18n_state\": \"active\", \"iso_3166_2\": \"PL\", \"country\": \"Poland\", \"currency\": \"PLN\", \"currency_name\": \"Zloty\", \"country_names\": { \"de\": \"Polen\", \"es\": \"Polonia\", \"fr\": \"Pologne\", \"hr\": \"Poljska\", \"it\": \"Polonia\", \"ja\": \"ポーランド\", \"nl\": \"Polen\", \"ru\": \"Польша\" } }, { \"exposed_url_part\": \"fi\", \"is_standard_locale\": true, \"full_locale\": \"fi_FI\", \"i18n_state\": \"active\", \"iso_3166_2\": \"FI\", \"country\": \"Finland\", \"currency\": \"EUR\", \"currency_name\": \"Euro\", \"country_names\": { \"de\": \"Finnland\", \"es\": \"Finlandia\", \"fr\": \"Finlande\", \"hr\": \"Finska\", \"it\": \"Finlandia\", \"ja\": \"フィンランド\", \"nl\": \"Finland\", \"ru\": \"Финляндия\" } }, { \"exposed_url_part\": \"hu\", \"is_standard_locale\": true, \"full_locale\": \"hu_HU\", \"i18n_state\": \"active\", \"iso_3166_2\": \"HU\", \"country\": \"Hungary\", \"currency\": \"HUF\", \"currency_name\": \"Forint\", \"country_names\": { \"de\": \"Ungarn\", \"es\": \"Hungría\", \"fr\": \"Hongrie\", \"hr\": \"Mađarska\", \"it\": \"Ungheria\", \"ja\": \"ハンガリー\", \"nl\": \"Hongarije\", \"ru\": \"Венгрия\" } }, { \"exposed_url_part\": \"gr\", \"is_standard_locale\": true, \"full_locale\": \"el_GR\", \"i18n_state\": \"active\", \"iso_3166_2\": \"GR\", \"country\": \"Greece\", \"currency\": \"EUR\", \"currency_name\": \"Euro\", \"country_names\": { \"de\": \"Griechenland\", \"es\": \"Grecia\", \"fr\": \"Grèce\", \"hr\": \"Grčka\", \"it\": \"Grecia\", \"ja\": \"ギリシャ\", \"nl\": \"Griekenland\", \"ru\": \"Греция\" } }, { \"exposed_url_part\": \"tr\", \"is_standard_locale\": true, \"full_locale\": \"tr_TR\", \"i18n_state\": \"active\", \"iso_3166_2\": \"TR\", \"country\": \"Turkey\", \"currency\": \"TRY\", \"currency_name\": \"Turkish Lira\", \"country_names\": { \"de\": \"Türkei\", \"es\": \"Turquía\", \"fr\": \"Turquie\", \"hr\": \"Turska\", \"it\": \"Turchia\", \"ja\": \"トルコ\", \"nl\": \"Turkije\", \"ru\": \"Турция\" } }, { \"exposed_url_part\": \"co\", \"is_standard_locale\": true, \"full_locale\": \"es_CO\", \"i18n_state\": \"active\", \"iso_3166_2\": \"CO\", \"country\": \"Colombia\", \"currency\": \"COP\", \"currency_name\": \"Colombian Peso\", \"country_names\": { \"cy\": \"Colombia\", \"de\": \"Kolumbien\", \"es\": \"Colombia\", \"fr\": \"Colombie\", \"hr\": \"Kolumbija\", \"it\": \"Colombia\", \"ja\": \"コロンビア\", \"nl\": \"Colombia\", \"ru\": \"Колумбия\" } }, { \"exposed_url_part\": \"ve\", \"is_standard_locale\": true, \"full_locale\": \"es_VE\", \"i18n_state\": \"active\", \"iso_3166_2\": \"VE\", \"country\": \"Venezuela\", \"currency\": \"VES\", \"currency_name\": \"Bolivar\", \"country_names\": { \"de\": \"Venezuela\", \"es\": \"Venezuela\", \"fr\": \"Venezuela\", \"hr\": \"Venezuela\", \"it\": \"Venezuela\", \"ja\": \"ベネズエラ・ボリバル共和国\", \"nl\": \"Venezuela\", \"ru\": \"Венесуэла\" } }, { \"exposed_url_part\": \"ph\", \"is_standard_locale\": true, \"full_locale\": \"en_PH\", \"i18n_state\": \"active\", \"iso_3166_2\": \"PH\", \"country\": \"Philippines\", \"currency\": \"PHP\", \"currency_name\": \"Philippine Peso\", \"country_names\": { \"de\": \"Philippinen\", \"es\": \"Filipinas\", \"fr\": \"Philippines\", \"hr\": \"Filipini\", \"it\": \"Filippine\", \"ja\": \"フィリピン\", \"nl\": \"Filipijnen\", \"ru\": \"Филиппины\" } }, { \"exposed_url_part\": \"ee\", \"is_standard_locale\": true, \"full_locale\": \"et_EE\", \"i18n_state\": \"active\", \"iso_3166_2\": \"EE\", \"country\": \"Estonia\", \"currency\": \"EUR\", \"currency_name\": \"Euro\", \"country_names\": { \"cy\": \"Estonia\", \"de\": \"Estland\", \"es\": \"Estonia\", \"fr\": \"Estonie\", \"hr\": \"Estonija\", \"it\": \"Estonia\", \"ja\": \"エストニア\", \"nl\": \"Estland\", \"ru\": \"Эстония\" } }, { \"exposed_url_part\": \"py\", \"is_standard_locale\": true, \"full_locale\": \"es_PY\", \"i18n_state\": \"active\", \"iso_3166_2\": \"PY\", \"country\": \"Paraguay\", \"currency\": \"PYG\", \"currency_name\": \"Guarani\", \"country_names\": { \"de\": \"Paraguay\", \"es\": \"Paraguay\", \"fr\": \"Paraguay\", \"hr\": \"Paragvaj\", \"it\": \"Paraguay\", \"ja\": \"パラグアイ\", \"nl\": \"Paraguay\", \"ru\": \"Парагвай\" } }, { \"exposed_url_part\": \"ae\", \"is_standard_locale\": true, \"full_locale\": \"ar_AE\", \"i18n_state\": \"active\", \"iso_3166_2\": \"AE\", \"country\": \"United Arab Emirates\", \"currency\": \"AED\", \"currency_name\": \"UAE Dirham\", \"country_names\": { \"de\": \"Vereinigte Arabische Emirate\", \"es\": \"Emiratos Árabes Unidos\", \"fr\": \"Émirats arabes unis\", \"hr\": \"Ujedinjeni Arapski Emirati\", \"it\": \"Emirati Arabi Uniti\", \"ja\": \"アラブ首長国連邦\", \"nl\": \"Verenigde Arabische Emiraten\", \"ru\": \"Объединённые Арабские Эмираты\" } }, { \"exposed_url_part\": \"is\", \"is_standard_locale\": true, \"full_locale\": \"is_IS\", \"i18n_state\": \"active\", \"iso_3166_2\": \"IS\", \"country\": \"Iceland\", \"currency\": \"ISK\", \"currency_name\": \"Iceland Krona\", \"country_names\": { \"de\": \"Island\", \"es\": \"Islandia\", \"fr\": \"Islande\", \"hr\": \"Island\", \"it\": \"Islanda\", \"ja\": \"アイスランド\", \"nl\": \"IJsland\", \"ru\": \"Исландия\" } }, { \"exposed_url_part\": \"se\", \"is_standard_locale\": true, \"full_locale\": \"sv_SE\", \"i18n_state\": \"active\", \"iso_3166_2\": \"SE\", \"country\": \"Sweden\", \"currency\": \"SEK\", \"currency_name\": \"Swedish Krona\", \"country_names\": { \"de\": \"Schweden\", \"es\": \"Suecia\", \"fr\": \"Suède\", \"hr\": \"Švedska\", \"it\": \"Svezia\", \"ja\": \"スウェーデン\", \"nl\": \"Zweden\", \"ru\": \"Швеция\" } }, { \"exposed_url_part\": \"ro\", \"is_standard_locale\": true, \"full_locale\": \"ro_RO\", \"i18n_state\": \"active\", \"iso_3166_2\": \"RO\", \"country\": \"Romania\", \"currency\": \"RON\", \"currency_name\": \"New Romanian Leu\", \"country_names\": { \"de\": \"Rumänien\", \"es\": \"Rumania\", \"fr\": \"Roumanie\", \"hr\": \"Rumunjska\", \"it\": \"Romania\", \"ja\": \"ルーマニア\", \"nl\": \"Roemenië\", \"ru\": \"Румыния\" } }, { \"exposed_url_part\": \"jm\", \"is_standard_locale\": true, \"full_locale\": \"en_JM\", \"i18n_state\": \"active\", \"iso_3166_2\": \"JM\", \"country\": \"Jamaica\", \"currency\": \"JMD\", \"currency_name\": \"Jamaican Dollar\", \"country_names\": { \"de\": \"Jamaika\", \"es\": \"Jamaica\", \"fr\": \"Jamaïque\", \"hr\": \"Jamajka\", \"it\": \"Giamaica\", \"ja\": \"ジャマイカ\", \"nl\": \"Jamaica\", \"ru\": \"Ямайка\" } }, { \"exposed_url_part\": \"md\", \"is_standard_locale\": true, \"full_locale\": \"ro_MD\", \"i18n_state\": \"active\", \"iso_3166_2\": \"MD\", \"country\": \"Moldova\", \"currency\": \"MDL\", \"currency_name\": \"Moldovan Leu\", \"country_names\": { \"de\": \"Moldawie\", \"es\": \"Moldavia\", \"fr\": \"Moldavie\", \"hr\": \"Moldova\", \"it\": \"Moldavia\", \"ja\": \"モルドバ共和国\", \"nl\": \"Moldavië\", \"ru\": \"Молдавия\" } }, { \"exposed_url_part\": \"pa\", \"is_standard_locale\": true, \"full_locale\": \"es_PA\", \"i18n_state\": \"active\", \"iso_3166_2\": \"PA\", \"country\": \"Panama\", \"currency\": \"PAB\", \"currency_name\": \"Balboa\", \"country_names\": { \"de\": \"Panama\", \"es\": \"Panamá\", \"fr\": \"Panama\", \"hr\": \"Panama\", \"it\": \"Panama\", \"ja\": \"パナマ\", \"nl\": \"Panama\", \"ru\": \"Панама\" } }, { \"exposed_url_part\": \"uy\", \"is_standard_locale\": true, \"full_locale\": \"es_UY\", \"i18n_state\": \"active\", \"iso_3166_2\": \"UY\", \"country\": \"Uruguay\", \"currency\": \"UYI\", \"currency_name\": \"Uruguay Peso en Unidades Indexadas (URUIURUI)\", \"country_names\": { \"de\": \"Uruguay\", \"es\": \"Uruguay\", \"fr\": \"Uruguay\", \"hr\": \"Urugvaj\", \"it\": \"Uruguay\", \"ja\": \"ウルグアイ\", \"nl\": \"Uruguay\", \"ru\": \"Уругвай\" } }, { \"exposed_url_part\": \"do\", \"is_standard_locale\": true, \"full_locale\": \"es_DO\", \"i18n_state\": \"active\", \"iso_3166_2\": \"DO\", \"country\": \"Dominican Republic\", \"currency\": \"DOP\", \"currency_name\": \"Dominican Peso\", \"country_names\": { \"cy\": \"Gweriniaeth_Dominica\", \"de\": \"Dominikanische Republik\", \"es\": \"República Dominicana\", \"fr\": \"République dominicaine\", \"hr\": \"Dominikanska Republika\", \"it\": \"Repubblica Dominicana\", \"ja\": \"ドミニカ共和国\", \"nl\": \"Dominicaanse Republiek\", \"ru\": \"Доминиканская Республика\" } }, { \"exposed_url_part\": \"sv\", \"is_standard_locale\": true, \"full_locale\": \"es_SV\", \"i18n_state\": \"active\", \"iso_3166_2\": \"SV\", \"country\": \"El Salvador\", \"currency\": \"SVC\", \"currency_name\": \"El Salvador Colon\", \"country_names\": { \"cy\": \"El Salvador\", \"de\": \"El Salvador\", \"es\": \"El Salvador\", \"fr\": \"Salvador\", \"hr\": \"Salvador\", \"it\": \"El Salvador\", \"ja\": \"エルサルバドル\", \"nl\": \"El Salvador\", \"ru\": \"Сальвадор\" } }, { \"exposed_url_part\": \"li\", \"is_standard_locale\": true, \"full_locale\": \"de_LI\", \"i18n_state\": \"active\", \"iso_3166_2\": \"LI\", \"country\": \"Liechtenstein\", \"currency\": \"CHF\", \"currency_name\": \"Swiss Franc\", \"country_names\": { \"de\": \"Liechtenstein\", \"es\": \"Liechtenstein\", \"fr\": \"Liechtenstein\", \"hr\": \"Lihtenštajn\", \"it\": \"Liechtenstein\", \"ja\": \"リヒテンシュタイン\", \"nl\": \"Liechtenstein\", \"ru\": \"Лихтенштейн\" } }, { \"exposed_url_part\": \"mc\", \"is_standard_locale\": true, \"full_locale\": \"fr_MC\", \"i18n_state\": \"active\", \"iso_3166_2\": \"MC\", \"country\": \"Monaco\", \"currency\": \"EUR\", \"currency_name\": \"Euro\", \"country_names\": { \"de\": \"Monaco\", \"es\": \"Mónaco\", \"fr\": \"Monaco\", \"hr\": \"Monako\", \"it\": \"Principato di Monaco\", \"ja\": \"モナコ\", \"nl\": \"Monaco\", \"ru\": \"Монако\" } }, { \"exposed_url_part\": \"sm\", \"is_standard_locale\": true, \"full_locale\": \"it_SM\", \"i18n_state\": \"active\", \"iso_3166_2\": \"SM\", \"country\": \"San Marino\", \"currency\": \"EUR\", \"currency_name\": \"Euro\", \"country_names\": { \"de\": \"San Marino\", \"es\": \"San Marino\", \"fr\": \"Saint-Marin\", \"hr\": \"San Marino\", \"it\": \"San Marino\", \"ja\": \"サンマリノ\", \"nl\": \"San Marino\", \"ru\": \"Сан-Марино\" } }, { \"exposed_url_part\": \"gi\", \"is_standard_locale\": true, \"full_locale\": \"en_GI\", \"i18n_state\": \"active\", \"iso_3166_2\": \"GI\", \"country\": \"Gibraltar\", \"currency\": \"GIP\", \"currency_name\": \"Gibraltar Pound\", \"country_names\": { \"de\": \"Gibraltar\", \"es\": \"Gibraltar\", \"fr\": \"Gibraltar\", \"hr\": \"Gibraltar\", \"it\": \"Gibilterra\", \"ja\": \"ジブラルタル\", \"nl\": \"Gibraltar\", \"ru\": \"Гибралтар\" } }, { \"exposed_url_part\": \"bb\", \"is_standard_locale\": true, \"full_locale\": \"en_BB\", \"i18n_state\": \"staging\", \"iso_3166_2\": \"BB\", \"country\": \"Barbados\", \"currency\": \"BBD\", \"currency_name\": \"Barbados Dollar\", \"country_names\": { \"cy\": \"Barbados\", \"de\": \"Barbados\", \"es\": \"Barbados\", \"fr\": \"Barbade\", \"hr\": \"Barbados\", \"it\": \"Barbados\", \"ja\": \"バルバドス\", \"nl\": \"Barbados\", \"ru\": \"Барбадос\" } }, { \"exposed_url_part\": \"no\", \"is_standard_locale\": true, \"full_locale\": \"en_NO\", \"i18n_state\": \"active\", \"iso_3166_2\": \"NO\", \"country\": \"Norway\", \"currency\": \"NOK\", \"currency_name\": \"Norwegian Krone\", \"country_names\": { \"de\": \"Norwegen\", \"es\": \"Noruega\", \"fr\": \"Norvège\", \"hr\": \"Norveška\", \"it\": \"Norvegia\", \"ja\": \"ノルウェー\", \"nl\": \"Noorwegen\", \"ru\": \"Норвегия\" } }, { \"exposed_url_part\": \"bh\", \"is_standard_locale\": true, \"full_locale\": \"ar_BH\", \"i18n_state\": \"staging\", \"iso_3166_2\": \"BH\", \"country\": \"Bahrain\", \"currency\": \"BHD\", \"currency_name\": \"Bahraini Dinar\", \"country_names\": { \"cy\": \"Bahrain\", \"de\": \"Bahrain\", \"es\": \"Bahrein\", \"fr\": \"Bahreïn\", \"hr\": \"Bahrein\", \"it\": \"Bahrein\", \"ja\": \"バーレーン\", \"nl\": \"Bahrein\", \"ru\": \"Бахрейн\" } }, { \"exposed_url_part\": \"bm\", \"is_standard_locale\": true, \"full_locale\": \"en_BM\", \"i18n_state\": \"staging\", \"iso_3166_2\": \"BM\", \"country\": \"Bermuda\", \"currency\": \"BMD\", \"currency_name\": \"Bermudian Dollar\", \"country_names\": { \"cy\": \"Bermiwda\", \"de\": \"Bermuda\", \"es\": \"Bermudas\", \"fr\": \"Bermudes\", \"hr\": \"Bermudi\", \"it\": \"Bermuda\", \"ja\": \"バミューダ\", \"nl\": \"Bermuda\", \"ru\": \"Бермудские Острова\" } }, { \"exposed_url_part\": \"bs\", \"is_standard_locale\": true, \"full_locale\": \"en_BS\", \"i18n_state\": \"staging\", \"iso_3166_2\": \"BS\", \"country\": \"Bahamas\", \"currency\": \"BSD\", \"currency_name\": \"Bahamian Dollar\", \"country_names\": { \"cy\": \"Bahamas\", \"de\": \"Bahamas\", \"es\": \"Bahamas\", \"fr\": \"Bahamas\", \"hr\": \"Bahami\", \"it\": \"Bahamas\", \"ja\": \"バハマ\", \"nl\": \"Bahama’s\", \"ru\": \"Багамские Острова\" } }, { \"exposed_url_part\": \"dz\", \"is_standard_locale\": true, \"full_locale\": \"ar_DZ\", \"i18n_state\": \"staging\", \"iso_3166_2\": \"DZ\", \"country\": \"Algeria\", \"currency\": \"DZD\", \"currency_name\": \"Algerian Dinar\", \"country_names\": { \"cy\": \"Algeria\", \"de\": \"Algerien\", \"es\": \"Argelia\", \"fr\": \"Algérie\", \"hr\": \"Alžir\", \"it\": \"Algeria\", \"ja\": \"アルジェリア\", \"nl\": \"Algerije\", \"ru\": \"Алжир\" } }, { \"exposed_url_part\": \"gf\", \"is_standard_locale\": true, \"full_locale\": \"fr_GF\", \"i18n_state\": \"staging\", \"iso_3166_2\": \"GF\", \"country\": \"French Guiana\", \"currency\": \"EUR\", \"currency_name\": \"Euro\", \"country_names\": { \"de\": \"Französisch Guyana\", \"es\": \"Guayana Francesa\", \"fr\": \"Guayane\", \"hr\": \"Francuska Gvajana\", \"it\": \"Guyana francese\", \"ja\": \"フランス領ギアナ\", \"nl\": \"Frans-Guyana\", \"ru\": \"Французская Гвиана\" } }, { \"exposed_url_part\": \"jo\", \"is_standard_locale\": true, \"full_locale\": \"ar_JO\", \"i18n_state\": \"staging\", \"iso_3166_2\": \"JO\", \"country\": \"Jordan\", \"currency\": \"JOD\", \"currency_name\": \"Jordanian Dinar\", \"country_names\": { \"de\": \"Jordanien\", \"es\": \"Jordania\", \"fr\": \"Jordanie\", \"hr\": \"Jordan\", \"it\": \"Giordania\", \"ja\": \"ヨルダン\", \"nl\": \"Jordanië\", \"ru\": \"Иордания\" } }, { \"exposed_url_part\": \"kw\", \"is_standard_locale\": true, \"full_locale\": \"ar_KW\", \"i18n_state\": \"staging\", \"iso_3166_2\": \"KW\", \"country\": \"Kuwait\", \"currency\": \"KWD\", \"currency_name\": \"Kuwaiti Dinar\", \"country_names\": { \"de\": \"Kuwait\", \"es\": \"Kuwait\", \"fr\": \"Koweït\", \"hr\": \"Kuvajt\", \"it\": \"Kuwait\", \"ja\": \"クウェート\", \"nl\": \"Koeweit\", \"ru\": \"Кувейт\" } }, { \"exposed_url_part\": \"ly\", \"is_standard_locale\": true, \"full_locale\": \"ar_LY\", \"i18n_state\": \"staging\", \"iso_3166_2\": \"LY\", \"country\": \"Libya\", \"currency\": \"LYD\", \"currency_name\": \"Libyan Dinar\", \"country_names\": { \"de\": \"Libyen\", \"es\": \"Libia\", \"fr\": \"Libye\", \"hr\": \"Libija\", \"it\": \"Libia\", \"ja\": \"リビア\", \"nl\": \"Libië\", \"ru\": \"Ливия\" } }, { \"exposed_url_part\": \"ma\", \"is_standard_locale\": true, \"full_locale\": \"ar_MA\", \"i18n_state\": \"staging\", \"iso_3166_2\": \"MA\", \"country\": \"Morocco\", \"currency\": \"MAD\", \"currency_name\": \"Moroccan Dirham\", \"country_names\": { \"de\": \"Marokko\", \"es\": \"Marruecos\", \"fr\": \"Maroc\", \"hr\": \"Maroko\", \"it\": \"Marocco\", \"ja\": \"モロッコ\", \"nl\": \"Marokko\", \"ru\": \"Марокко\" } }, { \"exposed_url_part\": \"om\", \"is_standard_locale\": true, \"full_locale\": \"ar_OM\", \"i18n_state\": \"staging\", \"iso_3166_2\": \"OM\", \"country\": \"Oman\", \"currency\": \"OMR\", \"currency_name\": \"Rial Omani\", \"country_names\": { \"de\": \"Oman\", \"es\": \"Omán\", \"fr\": \"Oman\", \"hr\": \"Oman\", \"it\": \"oman\", \"ja\": \"オマーン\", \"nl\": \"Oman\", \"ru\": \"Оман\" } }, { \"exposed_url_part\": \"qa\", \"is_standard_locale\": true, \"full_locale\": \"ar_QA\", \"i18n_state\": \"staging\", \"iso_3166_2\": \"QA\", \"country\": \"Qatar\", \"currency\": \"QAR\", \"currency_name\": \"Qatari Rial\", \"country_names\": { \"de\": \"Katar\", \"es\": \"Catar\", \"fr\": \"Qatar\", \"hr\": \"Katar\", \"it\": \"Qatar\", \"ja\": \"カタール\", \"nl\": \"Qatar\", \"ru\": \"Катар\" } }, { \"exposed_url_part\": \"tn\", \"is_standard_locale\": true, \"full_locale\": \"ar_TN\", \"i18n_state\": \"staging\", \"iso_3166_2\": \"TN\", \"country\": \"Tunisia\", \"currency\": \"TND\", \"currency_name\": \"Tunisian Dinar\", \"country_names\": { \"de\": \"Tunesien\", \"es\": \"Túnez\", \"fr\": \"Tunisie\", \"hr\": \"Tunis\", \"it\": \"Tunisia\", \"ja\": \"チュニジア\", \"nl\": \"Tunesië\", \"ru\": \"Тунис\" } }, { \"exposed_url_part\": \"hr\", \"is_standard_locale\": true, \"full_locale\": \"hr_HR\", \"i18n_state\": \"active\", \"iso_3166_2\": \"HR\", \"country\": \"Croatia\", \"currency\": \"HRK\", \"currency_name\": \"Croatian Kuna\", \"country_names\": { \"cy\": \"Croatia\", \"de\": \"Kroatien\", \"es\": \"Croacia\", \"fr\": \"Croatie\", \"hr\": \"Hrvatska\", \"it\": \"Croazia\", \"ja\": \"クロアチア\", \"nl\": \"Kroatië\", \"ru\": \"Хорватия\" } }, { \"exposed_url_part\": \"ye\", \"is_standard_locale\": true, \"full_locale\": \"ar_YE\", \"i18n_state\": \"staging\", \"iso_3166_2\": \"YE\", \"country\": \"Yemen\", \"currency\": \"YER\", \"currency_name\": \"Yemeni Rial\", \"country_names\": { \"de\": \"Jemen\", \"es\": \"Yemen\", \"fr\": \"Yémen\", \"hr\": \"Jemen\", \"it\": \"Yemen\", \"ja\": \"イエメン\", \"nl\": \"Jemen\", \"ru\": \"Йемен\" } }, { \"exposed_url_part\": \"dk\", \"is_standard_locale\": true, \"full_locale\": \"en_DK\", \"i18n_state\": \"active\", \"iso_3166_2\": \"DK\", \"country\": \"Denmark\", \"currency\": \"DKK\", \"currency_name\": \"Danish Krone\", \"country_names\": { \"cy\": \"Denmarc\", \"de\": \"Dänemark\", \"es\": \"Dinamarca\", \"fr\": \"Danemark\", \"hr\": \"Danska\", \"it\": \"Danimarca\", \"ja\": \"デンマーク\", \"nl\": \"Denemarken\", \"ru\": \"Дания\" } }, { \"exposed_url_part\": \"ar\", \"is_standard_locale\": true, \"full_locale\": \"es_AR\", \"i18n_state\": \"active\", \"iso_3166_2\": \"AR\", \"country\": \"Argentina\", \"currency\": \"ARS\", \"currency_name\": \"Argentine Peso\", \"country_names\": { \"cy\": \"Ariannin\", \"de\": \"Argentinien\", \"es\": \"Argentina\", \"fr\": \"Argentine\", \"hr\": \"Argentina\", \"it\": \"Argentina\", \"ja\": \"アルゼンチン\", \"nl\": \"Argentinië\", \"ru\": \"Аргентина\" } }, { \"exposed_url_part\": \"cl\", \"is_standard_locale\": true, \"full_locale\": \"es_CL\", \"i18n_state\": \"active\", \"iso_3166_2\": \"CL\", \"country\": \"Chile\", \"currency\": \"CLF\", \"currency_name\": \"Unidad de Fomento\", \"country_names\": { \"cy\": \"Chile\", \"de\": \"Chile\", \"es\": \"Chile\", \"fr\": \"Chili\", \"hr\": \"Čile\", \"it\": \"Cile\", \"ja\": \"チリ\", \"nl\": \"Chili\", \"ru\": \"Чили\" } }, { \"exposed_url_part\": \"ec\", \"is_standard_locale\": true, \"full_locale\": \"es_EC\", \"i18n_state\": \"active\", \"iso_3166_2\": \"EC\", \"country\": \"Ecuador\", \"currency\": \"USD\", \"currency_name\": \"US Dollar\", \"country_names\": { \"cy\": \"Ecwador\", \"de\": \"Ecuador\", \"es\": \"Ecuador\", \"fr\": \"Équateur\", \"hr\": \"Ekvador\", \"it\": \"Ecuador\", \"ja\": \"エクアドル\", \"nl\": \"Ecuador\", \"ru\": \"Эквадор\" } }, { \"exposed_url_part\": \"bo\", \"is_standard_locale\": true, \"full_locale\": \"es_BO\", \"i18n_state\": \"active\", \"iso_3166_2\": \"BO\", \"country\": \"Bolivia\", \"currency\": \"BOB\", \"currency_name\": \"Boliviano\", \"country_names\": { \"cy\": \"Bolifia\", \"de\": \"Bolivien\", \"es\": \"Bolivia\", \"fr\": \"Bolivie\", \"hr\": \"Bolivija\", \"it\": \"Bolivia\", \"ja\": \"ボリビア多民族国\", \"nl\": \"Bolivia\", \"ru\": \"Боливия\" } }, { \"exposed_url_part\": \"es\", \"is_standard_locale\": true, \"full_locale\": \"es_ES\", \"i18n_state\": \"active\", \"iso_3166_2\": \"ES\", \"country\": \"Spain\", \"currency\": \"EUR\", \"currency_name\": \"Euro\", \"country_names\": { \"de\": \"Spanien\", \"es\": \"España\", \"fr\": \"Espagne\", \"hr\": \"Španjolska\", \"it\": \"Spagna\", \"ja\": \"スペイン\", \"nl\": \"Spanje\", \"ru\": \"Испания\" } }, { \"exposed_url_part\": \"lv\", \"is_standard_locale\": true, \"full_locale\": \"lv_LV\", \"i18n_state\": \"active\", \"iso_3166_2\": \"LV\", \"country\": \"Latvia\", \"currency\": \"EUR\", \"currency_name\": \"Euro\", \"country_names\": { \"de\": \"Lettland\", \"es\": \"Letonia\", \"fr\": \"Lettonie\", \"hr\": \"Latvija\", \"it\": \"Lettonia\", \"ja\": \"ラトビア\", \"nl\": \"Letland\", \"ru\": \"Латвия\" } }, { \"exposed_url_part\": \"cr\", \"is_standard_locale\": true, \"full_locale\": \"es_CR\", \"i18n_state\": \"active\", \"iso_3166_2\": \"CR\", \"country\": \"Costa Rica\", \"currency\": \"CRC\", \"currency_name\": \"Costa Rican Colon\", \"country_names\": { \"cy\": \"Costa Rica\", \"de\": \"Costa Rica\", \"es\": \"Costa Rica\", \"fr\": \"Costa Rica\", \"hr\": \"Kostarika\", \"it\": \"Costa Rica\", \"ja\": \"コスタリカ\", \"nl\": \"Costa Rica\", \"ru\": \"Коста-Рика\" } }];\n}\nexport class Locale {\n    constructor(country, full_locale) {\n        this.country = country;\n        this.full_locale = full_locale;\n    }\n}\n/*\nReturns the usable information about every JustWatch supported locale,\nthe property for key 'full_locale' is the one usable for API requests.\nex. en_US\n*/\nexport async function get_all_locales() {\n    const locales = await get_locales();\n    var all_locales = [];\n    locales.forEach((i) => {\n        var l = new Locale(i.country, i.full_locale);\n        all_locales.push(l);\n    });\n    return all_locales;\n}\n// Returns JSON data on every provider JustWatch has data on for a given locale/country\nasync function get_providers(country) {\n    const url = `${proxy()}https://apis.justwatch.com/content/providers/locale/${country}`;\n    const response = await fetch(url, {\n        headers: { \"X-Requested-With\": \"fetch\" }\n    });\n    if (response.ok == false)\n        throw new Error(\"Http Error: \" + response.status);\n    return response.json();\n}\n// Returns the JSON data on every single provider JustWath has data on for every country\nexport async function get_all_providers() {\n    const locale_list = await get_all_locales();\n    var providers_array = [];\n    var promise = locale_list.map(async (locale) => {\n        var r = await get_providers(locale.full_locale);\n        var provider = {\n            country: locale.country,\n            providers: r\n        };\n        providers_array.push(provider);\n    });\n    await Promise.all(promise);\n    return providers_array;\n}\n/*\nReturns JustWatch's data for a given show or movie for a given locale.\ncontent_type is either \"show\" or \"movie\"\n*/\nexport async function get_title_from_id(title_id, country, content_type) {\n    const url = `${proxy()}https://apis.justwatch.com/content/titles/${content_type}/${title_id}/locale/${country}`;\n    const response = await fetch(url, {\n        headers: { \"X-Requested-With\": \"fetch\" }\n    });\n    if (response.ok == false)\n        throw new Error(\"Http Error: \" + response.status);\n    return response.json();\n}\nexport class IDSearch {\n    constructor(title, id, poster_uri, type, release_year, query_locale) {\n        this.title = title;\n        this.id = id;\n        this.poster_uri = poster_uri;\n        this.type = type;\n        this.release_year = release_year;\n        this.query_locale = query_locale;\n    }\n}\n// Returns the most useful data from a search query as an array of IDSearch objects.\n// IDSearch's properties are the title of the movie or show, JustWatch's id for that movie or show, \n// the URL of that movie or show's poster, the type (show or movie), the release year, and the Locale \n// object used to make the search\nexport async function search_for_item_id(query, locale) {\n    const r = await search_for_item(query, locale.full_locale);\n    var titles = [];\n    r[\"items\"].forEach((i) => {\n        let regex = new RegExp(\"\\\\s*([0-9]+)\");\n        var regex_match = regex.exec(i[\"poster\"]);\n        var poster_uri;\n        if (regex_match == null) {\n            poster_uri = \"NULL\";\n        }\n        else {\n            poster_uri = `https://images.justwatch.com/poster/${regex_match[0]}/s592/poster.webp`;\n        }\n        titles.push(new IDSearch(i[\"title\"], i[\"id\"], poster_uri, i[\"object_type\"], i[\"original_release_year\"], locale));\n    });\n    return titles;\n}\n","<div style=\"padding-top:8rem; height: 100vh;\">\n  <span>\n    <h1>Loading...</h1>\n  </span>\n  <span>\n    <div class=\"loader\"/>\n  </span>\n</div>\n\n<style>\n  h1 {\n    Color: white;\n  }\n  span {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n  }\n  .loader {\n    border: 1rem solid grey;\n    border-top: 1rem solid rgb(255, 230, 0);\n    border-radius: 50%;\n    width: 7rem;\n    height: 7rem;\n    animation: spin 2s linear infinite;\n  }\n\n  @keyframes spin {\n    0% {\n      transform: rotate(0deg);\n    }\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n</style>\n","<script lang=\"ts\">\n  import App from \"./App.svelte\";\n  import { get_all_locales } from \"./backend/justwatchapi\";\n  import Loading from \"./Loading.svelte\";\n\n  let query: string;\n  let locales: any = get_all_locales();\n\n  let selected_locale;\n  let submitted = false;\n  function onSubmit() {\n    if (query != undefined) {\n      submitted = true;\n    } else {\n      alert(\"Please input a valid title.\");\n    }\n  }\n</script>\n\n{#if submitted}\n  <App\n    page=\"SearchResults\"\n    search=\"{query},\"\n    locale={JSON.parse(selected_locale)}\n  />\n{:else}\n  <div class=\"class\">\n    {#await locales}\n      <Loading />\n    {:then locales}\n      <div class=\"background\" />\n      <div class=\"top\">\n        <h1>Global Streaming Search</h1>\n        <h3>\n          Search for a movie or TV show title and see what streaming services\n          offer it worldwide!\n        </h3>\n        <p>\n          Optionally select a country for the initial search, allows searching\n          in your country's native language.\n        </p>\n          <form on:submit|preventDefault={onSubmit}>\n            <div>\n              <input\n                class=\"search\"\n                type=\"text\"\n                bind:value={query}\n                placeholder=\"🔎 Title\"\n                style=\"width: 30vw;\"\n              />\n              <input type=\"submit\" class=\"search\" value=\"Search\" />\n            </div>\n            <select class=\"search\" bind:value={selected_locale}>\n              {#each locales as locale}\n                <option value={JSON.stringify(locale)}\n                  >{locale[\"country\"]}</option\n                >\n              {/each}\n            </select>\n          </form>\n      </div>\n    {/await}\n  </div>\n{/if}\n\n<style>\n  p {\n    font-size: 0.8rem;\n    font-weight: 300;\n    color: white;\n  }\n  .top {\n    background-color: rgb(0, 0, 0);\n    background-color: rgba(0, 0, 0, 0.75);\n    position: absolute;\n    top: 30%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    width: 50%;\n    padding: 2rem;\n    border-radius: 2rem;\n    margin-top: calc(100vh / 6);\n  }\n  .background {\n    background-image: url(\"https://colaski.github.io/global-streaming-search/images/movie-poster-collection.webp\");\n    filter: blur(0.3rem);\n    height: 100vh;\n    margin-top: -3rem;\n  }\n  .class {\n    text-align: center;\n    padding: 1rem;\n    margin: 0 auto;\n  }\n\n  h3 {\n    font-weight: 300;\n    color: white;\n    font-size: 1rem;\n  }\n\n  h1 {\n    color: #ff7b00;\n    font-size: 2em;\n    font-weight: 300;\n  }\n\n  .search {\n    background-color: transparent;\n    color: white;\n    border-radius: 0.3rem;\n  }\n\n  input::placeholder {\n    color: rgba(255, 255, 255, 0.685);\n  }\n</style>\n","<div>\n  <a href=\"https://colaski.github.io/global-streaming-search/\"><h1>Global Streaming Search</h1></a>\n</div>\n\n<style>\n  h1 {\n    color: #ff7b00;\n    font-size: 1em;\n    font-weight: 300;\n    padding: 1.5rem;\n  }\n  div {\n    text-align: center;\n    background-color: black;\n    margin-top: -1.5em;\n    margin-left: -1rem;\n    margin-right: -1rem;\n  }\n</style>","import { search_for_item_id, get_all_locales, get_title_from_id, IDSearch, get_all_providers } from \"./justwatchapi\";\nexport async function search(query, locale) {\n    return await search_for_item_id(query, locale);\n}\nexport class TVOrMovie extends IDSearch {\n    constructor(is, short_description, number_seasons, backdrop_url, offers) {\n        super(is.title, is.id, is.poster_uri, is.type, is.release_year, is.query_locale);\n        this.short_description = short_description;\n        this.number_seasons = number_seasons;\n        this.backdrop_url = backdrop_url;\n        this.offers = offers;\n    }\n}\nclass CountryOffers {\n    constructor(country, offers) {\n        this.country = country;\n        this.offers = offers;\n    }\n}\nclass Offer {\n}\nexport async function get_all_info_from_id(search, providers) {\n    const locales = await get_all_locales();\n    let country_info = [];\n    var append_country_info = locales.map(async (i) => {\n        let r = await get_title_from_id(search.id, i.full_locale, search.type);\n        country_info.push({ country: i.country, info: r });\n    });\n    await Promise.all(append_country_info);\n    let home = country_info.filter((obj) => {\n        return obj.country === search.query_locale.country;\n    });\n    home = home[0].info;\n    let short_description = home[\"short_description\"];\n    // Gets the backdrop url.\n    let regex = new RegExp(\"\\\\s*([0-9]+)\");\n    let regex_match = regex.exec(home[\"backdrops\"][0][\"backdrop_url\"]);\n    let backdrop_url = (regex_match != null) ? `https://images.justwatch.com/backdrop/${regex_match[0]}/s1920/backdrop.webp` : \"NULL\";\n    let seasons = (\"seasons\" in home) ? home[\"seasons\"] : \"NULL\";\n    let offers = [];\n    var append_offers = country_info.map(async (i) => {\n        let country = i.country;\n        i = i.info;\n        if (\"offers\" in i) {\n            let os = [];\n            var append_os = i[\"offers\"].map(async (i) => {\n                if (i[\"monitization_types\"] == \"flatrate\" || \"ads\" || \"free\") {\n                    providers.forEach(provider => {\n                        if (i.provider_id == provider.id) {\n                            os.push({\n                                id: provider.id,\n                                short_name: provider.short_name,\n                                clear_name: provider.clear_name,\n                                icon_uri: provider.icon_uri,\n                                monetization_types: provider.monetization_types,\n                                url: i[\"urls\"][\"standard_web\"]\n                            });\n                        }\n                    });\n                }\n            });\n            await Promise.all(append_os);\n            offers.push({\n                country: country,\n                offers: os\n            });\n        }\n    });\n    await Promise.all(append_offers);\n    return new TVOrMovie(search, short_description, seasons, backdrop_url, offers);\n}\nexport class Provider {\n    constructor(id, short_name, clear_name, icon_uri, monetization_types) {\n        this.id = id;\n        this.short_name = short_name;\n        this.clear_name = clear_name;\n        this.icon_uri = icon_uri;\n        this.monetization_types = monetization_types;\n    }\n}\nexport async function distilled_providers() {\n    var p = await get_all_providers();\n    var providers = [];\n    var extract_country = p.map(async (i) => {\n        let provs = [];\n        i[\"providers\"].forEach((i) => {\n            if (i[\"monetization_types\"].includes(\"flatrate\") || i[\"monetization_types\"].includes(\"free\") || i[\"monetization_types\"].includes(\"ads\")) {\n                var monetization_types = i[\"monetization_types\"];\n                let regex = new RegExp(\"\\\\s*([0-9]+)\");\n                var regex_match = regex.exec(i[\"icon_url\"]);\n                let icon_uri = (regex_match != null) ? `https://www.justwatch.com/images/icon/${regex_match[0]}/s100/icon.webp` : \"NULL\";\n                providers.push(new Provider(i[\"id\"], i[\"short_name\"], i[\"clear_name\"], icon_uri, monetization_types));\n            }\n        });\n    });\n    await Promise.all(extract_country);\n    const unique = [...new Map(providers.map((item) => [item[\"id\"], item])).values()];\n    return unique;\n}\n","<script lang=\"ts\">\n  import Loading from \"./Loading.svelte\"\n  import App from \"./App.svelte\";\n  import Header from \"./Header.svelte\"\n\n  import type { Locale, IDSearch } from \"./backend/justwatchapi\";\n  import { search } from \"./backend/search\";\n\n  export let query: string;\n  export let locale: Locale;\n\n  // not sure why here is randomly 2 commas that sometimes appear\n  // on my query so frick em.\n  query = query.replace(\",,\", \"\");\n\n  let search_results = search(query, locale);\n\n  let selected = false;\n  let selection: string;\n  function select(r: any) {\n    selected = true;\n    selection = JSON.stringify(r);\n  }\n</script>\n\n{#if selected}\n  <App page=\"Selection\" {selection} />\n{:else}\n  <Header/>\n  <h2 style=\"color: white; text-align: center;\">\n    Results for <span style=\"color: red;\">{query}</span>\n  </h2>\n  {#await search_results}\n    <Loading/>\n  {:then search_results}\n    {#if search_results.length > 0}\n      <div class=\"results\">\n        {#each search_results as result}\n          <div\n            style=\"display: inline-block; margin-left: 2rem; margin-right: 2rem; margin-bottom: 2rem;\"\n          >\n            <div class=\"result\">\n              {#if result[\"poster_uri\"] != \"NULL\"}\n                <img\n                src={result[\"poster_uri\"]}\n                alt=\"Poster for the {result['type']} {result['title']}\"\n                />\n              {:else}\n                <img\n                src=\"./images/noImage.webp\"\n                alt=\"No image found for the {result['type']} {result['title']}\"\n                />\n              {/if}\n              <span class=\"resultinfo\" on:click={() => select(result)}>\n                <h2>{result[\"title\"]}</h2>\n                <h4>({result[\"release_year\"]})</h4>\n                <h4>{result[\"type\"]}</h4>\n              </span>\n            </div>\n          </div>\n        {/each}\n      </div>\n    {:else}\n      <span style=\"color: white; text-align: center;\">\n        <h1>No results 😭</h1>\n        <h2>please reload the page and try a different title.</h2>\n      </span>\n    {/if}\n  {/await}\n{/if}\n\n<style>\n  img {\n    width: 15rem;\n  }\n  .results {\n    text-align: center;\n  }\n  .result {\n    position: relative;\n    width: 15rem;\n  }\n  .resultinfo {\n    display: inline-block;\n    padding-left: 2rem;\n    padding-right: 2rem;\n\n    position: absolute;\n    top: 0;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    background: rgba(29, 106, 154, 0.72);\n    color: #fff;\n    text-align: center;\n    visibility: hidden;\n    opacity: 0;\n\n    /* transition effect. not necessary */\n    transition: opacity 0.2s, visibility 0.2s;\n  }\n  .result:hover .resultinfo {\n    visibility: visible;\n    opacity: 1;\n  }\n</style>\n","<script lang=\"ts\">\n  import Loading from \"./Loading.svelte\"\n  import type { IDSearch } from \"./backend/justwatchapi\";\n  import { get_all_info_from_id, Provider, TVOrMovie } from \"./backend/search\";\n  import Header from \"./Header.svelte\"\n\n  export let providers: [Provider];\n  export let selection;\n  selection = JSON.parse(selection) as IDSearch;\n\n  let title = get_all_info_from_id(selection, providers);\n</script>\n\n{#await title}\n  <Loading/>\n{:then titles}\n  <Header/>\n  <div class=\"selection\" style=\"--backdrop-url: url({titles.backdrop_url});\">\n    <div style=\"background-color: transparent; height: 15rem;\" />\n    <div class=\"box\">\n      <div style=\"display: flex; align-items: left\">\n        <img\n          src={titles[\"poster_uri\"]}\n          alt=\"Poster for the {titles['type']} {titles['title']}\"\n        />\n        <div class=\"text\">\n          <h1>{titles[\"title\"]}</h1>\n          <h3>{titles[\"release_year\"]}</h3>\n          <p>{titles[\"short_description\"]}</p>\n          {#each titles.offers as country}\n            <div class=\"offer\">\n              <h4>{country[\"country\"]}</h4>\n              {#each country.offers as offer}\n                <div style=\"display: inline-block;\">\n                  <span style=\"text-align: center; display: inline-block;\">\n                    <a href=\"{offer[\"url\"]}\"><img src=\"{offer[\"icon_uri\"]}\" alt=\"Icon for {offer.clear_name}\" id=\"{offer.short_name}\"></a>\n                  <label for=\"{offer.short_name}\">{offer.clear_name}</label>\n                  </span>\n                </div>\n                <!--Continue-->\n              {/each}\n            </div>\n          {/each}\n        </div>\n      </div>\n    </div>\n  </div>\n{:catch error}\n  <Header/>\n  <div style=\"text-align: center; color: white; margin: 1rem;\">\n    <h1 >The website is being rate limited 😞, please try again later</h1>\n    <p></p>\n    <h3>If you happen to know what Node.js is you can run this website locally and avoid rate limits.</h3>\n    <h3>Click the Github logo in the corner for more information.</h3>\n  </div>\n{/await}\n\n<style>\n  label {\n    font-size: 0.5rem;\n    max-width: 7rem;\n  }\n  .offer {\n    border-style: solid;\n    border-radius: 2rem;\n    border-color: rgba(0, 0, 0, 0.411);\n    background-color:rgba(0, 0, 0, 0.411);\n    padding-left: 2rem;\n    padding-right: 2rem;\n    padding-bottom: 1rem;\n    padding-top: 1rem;\n    margin-top: 2rem;\n  }\n  .text {\n    padding-left: 1rem;\n    padding-right: 1rem;\n  }\n  img {\n    width: 35%;\n    margin-left: -10%;\n    border-color: rgb(44, 16, 16);\n    border-radius: 1rem;\n    border-width: 0.5rem;\n    border-style: solid;\n    height: 50%;\n  }\n  .selection {\n    margin-top: -1.5rem;\n    background-image: var(--backdrop-url);\n    background-size: cover;\n    height: 30rem;\n    margin-left: -1rem;\n    margin-right: -1rem;\n  }\n  .box {\n    display: block;\n    margin-left: 10%;\n    margin-right: 10%;\n    background-color: rgb(44, 44, 44);\n    padding: 1rem;\n    border-radius: 1rem;\n    color: white;\n  }\n</style>\n","<script lang=\"ts\">\n  import Search from \"./Search.svelte\";\n  import SearchResults from \"./SearchResults.svelte\";\n  import Selection from \"./Selection.svelte\";\n  import Loading from \"./Loading.svelte\";\n\n  import { distilled_providers } from \"./backend/search\";\n\n  let providers = distilled_providers();\n  // change the selected page\n  export let page = \"search\";\n\n  // for \"SearchResults\" page\n  export let search = undefined;\n  export let locale: any = undefined;\n\n  // for \"Selection\"\n  export let selection = undefined;\n</script>\n\n<!--\n  Goes through possible values for the query and renders appropriate page.\n  \n  values:\n      - search\n        is the default value, displays the search bar page.\n\n      - SearchResults\n        displays the results from the search page search.\n\n      - Selection\n        displays the information from the title selected from SearchResults.\n-->\n\n{#await providers}\n  <Loading/>\n{:then providers}\n  {#if page == \"search\"}\n    <Search />\n  {:else if page == \"SearchResults\"}\n    <SearchResults query=\"{search},\" {locale} />\n  {:else if page == \"Selection\"}\n    <Selection {providers} {selection} />\n  {/if}\n{/await}\n","<script>\n  import App from \"./App.svelte\";\n  import { MetaTags } from \"svelte-meta-tags\";\n</script>\n\n<main>\n  <a href=\"https://github.com/Colaski/global-streaming-search\"\n    ><img\n      src=\"https://colaski.github.io/global-streaming-search/images/github.png\"\n      alt=\"github logo\"\n    /></a\n  >\n  <App />\n</main>\n\n<style>\n  img {\n    float: right;\n    float: top;\n    position: relative;\n    z-index: 100;\n    width: 2rem;\n    padding-right: 0.5rem;\n    padding-top: calc(100vh / 50);\n  }\n  :global(body) {\n    background-image: linear-gradient(135deg, rgb(16, 24, 44), rgb(44, 16, 16));\n    height: 100%;\n    margin: 0;\n    background-repeat: no-repeat;\n    background-attachment: fixed;\n    margin-left: 0;\n    margin-right: 0;\n  }\n</style>\n","import Index from './Index.svelte';\nconst app = new Index({\n    target: document.body,\n    props: {}\n});\nexport default app;\n"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","src_url_equal_anchor","current_component","src_url_equal","element_src","url","document","createElement","href","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","destroy_each","iterations","detaching","i","length","d","element","name","text","data","createTextNode","space","empty","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","value","removeAttribute","getAttribute","setAttribute","set_input_value","input","set_style","key","important","style","setProperty","select_option","select","option","__value","selected","selectedIndex","set_current_component","component","get_current_component","Error","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","push","flushing","seen_callbacks","Set","flush","update","$$","pop","callback","has","add","clear","fragment","before_update","dirty","p","ctx","after_update","outroing","outros","group_outros","r","c","check_outros","transition_in","block","local","delete","transition_out","o","handle_promise","promise","info","token","type","index","resolved","child_ctx","undefined","slice","current","needs_flush","blocks","m","mount","then","error","catch","hasCatch","pending","update_await_block_branch","create_component","mount_component","customElement","on_mount","on_destroy","new_on_destroy","map","filter","destroy_component","make_dirty","fill","init","instance","create_fragment","not_equal","props","append_styles","parent_component","bound","on_disconnect","context","Map","callbacks","skip_bound","root","ready","ret","rest","hydrate","nodes","Array","from","childNodes","children","l","intro","SvelteComponent","$destroy","this","$on","indexOf","splice","$set","$$props","obj","$$set","keys","proxy","proxies","Math","floor","random","Locale","constructor","country","full_locale","async","get_all_locales","locales","exposed_url_part","is_standard_locale","i18n_state","iso_3166_2","currency","currency_name","country_names","de","es","fr","hr","it","ja","nl","ru","cy","get_locales","all_locales","get_all_providers","locale_list","providers_array","locale","response","fetch","headers","ok","status","json","get_providers","provider","providers","all","IDSearch","title","id","poster_uri","release_year","query_locale","search_for_item_id","query","console","log","body","method","JSON","stringify","search_for_item","titles","regex_match","RegExp","exec","parse","preventDefault","call","selected_locale","submitted","alert","selected_option","querySelector","TVOrMovie","is","short_description","number_seasons","backdrop_url","offers","super","get_all_info_from_id","search","country_info","append_country_info","title_id","content_type","get_title_from_id","home","seasons","append_offers","os","append_os","provider_id","short_name","clear_name","icon_uri","monetization_types","Provider","wholeText","replace","selection","search_results","result","extract_country","includes","item","values","distilled_providers","page"],"mappings":"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"}